參考＜鸟哥的linux私房菜＞
* - 通配符,代表随意字符(0到多个)
? - 通配符,代表一个字符，但是不能没有字符
# - 凝视
/ - 跳转符号,将特殊字符或通配符还原成一般符号
| - 分隔两个管线命令的界定
; - 连续性命令的界定
~ - 用户的根文件夹
$ - 变量前须要加的变量值
! - 逻辑运算中的"非"(not)
/ - 路径分隔符号
>, >> - 输出导向,分别为"代替"与"累加"
' - 单引号,不具有变量置换功能
" - 双引号,具有变量置换功能
` - quote符号,两个``中间为能够先运行的指令
() - 中间为子shell的起始与结束
[] - 中间为字符组合
{} - 中间为命令区块组合
Ctrl+C - 终止当前命令
Ctrl+D - 输入结束(EOF),比如邮件结束的时候
Ctrl+M - 就是Enter
Ctrl+S - 暂停屏幕的输出
Ctrl+Q - 恢复屏幕的输出
Ctrl+U - 在提示符下,将整行命令删除
Ctrl+Z - 暂停当前命令
&& - 当前一个指令运行成功时,运行后一个指令
|| - 当前一个指令运行失败时,运行后一个指令

 

 

当中最经常使用的是＊、？、［］和 ‘。以下举几个简单的样例：

1，ls test*             <== *表示后面不论接几个字符都接受（没有字符也接受）

2，ls test?            <== ?表示后面当且仅当接一个字符时才接受，不能没有字符

3，ls test???       <== ???表示一定要接三个字符

4，cp  test[1~5]  /tmp      <== test1, test2, test3, test4, test5若存在，则拷贝到/tmp文件夹下

5，cd  /lib/modules/' uname  -r'/kernel/drivers        <== 被 ' ' 括起来的命令先运行